diff -ur zaptel-1.4.12.1/kernel/pciradio.c zaptel-1.4.12.1.fixed/kernel/pciradio.c
--- zaptel-1.4.12.1/kernel/pciradio.c	2012-05-10 10:50:07.610144005 +0200
+++ zaptel-1.4.12.1.fixed/kernel/pciradio.c	2012-05-10 10:05:18.759202536 +0200
@@ -49,6 +49,7 @@
 #include <linux/errno.h>
 #include <linux/pci.h>
 #include <linux/interrupt.h>
+#include <linux/sched.h>
 #include <asm/io.h>
 #include <asm/delay.h> 
 
diff -ur zaptel-1.4.12.1/kernel/wctdm.c zaptel-1.4.12.1.fixed/kernel/wctdm.c
--- zaptel-1.4.12.1/kernel/wctdm.c	2008-08-20 23:30:49.000000000 +0200
+++ zaptel-1.4.12.1.fixed/kernel/wctdm.c	2012-05-10 10:05:41.890271235 +0200
@@ -30,6 +30,7 @@
 #include <linux/errno.h>
 #include <linux/pci.h>
 #include <linux/interrupt.h>
+#include <linux/sched.h>
 #include <asm/io.h>
 #include "proslic.h"
 #include "wctdm.h"
diff -ur zaptel-1.4.12.1/kernel/wcte12xp/base.c zaptel-1.4.12.1.fixed/kernel/wcte12xp/base.c
--- zaptel-1.4.12.1/kernel/wcte12xp/base.c	2008-08-14 02:58:36.000000000 +0200
+++ zaptel-1.4.12.1.fixed/kernel/wcte12xp/base.c	2012-05-10 10:07:15.597934040 +0200
@@ -34,6 +34,7 @@
 #include <linux/errno.h>
 #include <linux/pci.h>
 #include <linux/proc_fs.h>
+#include <linux/sched.h>
 
 #ifdef LINUX26
 #include <linux/moduleparam.h>
diff -ur zaptel-1.4.12.1/kernel/xpp/card_fxo.c zaptel-1.4.12.1.fixed/kernel/xpp/card_fxo.c
--- zaptel-1.4.12.1/kernel/xpp/card_fxo.c	2008-09-09 18:35:41.000000000 +0200
+++ zaptel-1.4.12.1.fixed/kernel/xpp/card_fxo.c	2012-05-10 10:08:36.731682575 +0200
@@ -411,7 +411,7 @@
 		XPD_ERR(xpd, "Failed to create proc file '%s'\n", PROC_FXO_INFO_FNAME);
 		goto err;
 	}
-	priv->fxo_info->owner = THIS_MODULE;
+	//priv->fxo_info->owner = THIS_MODULE;
 #ifdef	WITH_METERING
 	XPD_DBG(PROC, xpd, "Creating Metering tone file\n");
 	priv->meteringfile = create_proc_read_entry(PROC_METERING_FNAME, 0444, xpd->proc_xpd_dir,
diff -ur zaptel-1.4.12.1/kernel/xpp/card_fxs.c zaptel-1.4.12.1.fixed/kernel/xpp/card_fxs.c
--- zaptel-1.4.12.1/kernel/xpp/card_fxs.c	2008-08-07 12:12:36.000000000 +0200
+++ zaptel-1.4.12.1.fixed/kernel/xpp/card_fxs.c	2012-05-10 10:08:50.365645823 +0200
@@ -342,7 +342,7 @@
 		XPD_ERR(xpd, "Failed to create proc file '%s'\n", PROC_FXS_INFO_FNAME);
 		goto err;
 	}
-	priv->fxs_info->owner = THIS_MODULE;
+	//priv->fxs_info->owner = THIS_MODULE;
 #ifdef	WITH_METERING
 	XPD_DBG(PROC, xpd, "Creating Metering tone file\n");
 	priv->meteringfile = create_proc_entry(PROC_METERING_FNAME, 0200, xpd->proc_xpd_dir);
diff -ur zaptel-1.4.12.1/kernel/xpp/card_global.c zaptel-1.4.12.1.fixed/kernel/xpp/card_global.c
--- zaptel-1.4.12.1/kernel/xpp/card_global.c	2008-09-09 19:13:27.000000000 +0200
+++ zaptel-1.4.12.1.fixed/kernel/xpp/card_global.c	2012-05-10 10:48:18.058400793 +0200
@@ -395,7 +395,7 @@
 		XPD_ERR(xpd, "Failed to create proc file '%s'\n", CHIP_REGISTERS);
 		goto err;
 	}
-	xpd->proc_xpd_chipregs->owner = THIS_MODULE;
+	//xpd->proc_xpd_chipregs->owner = THIS_MODULE;
 	xpd->proc_xpd_chipregs->write_proc = proc_xpd_register_write;
 	xpd->proc_xpd_chipregs->read_proc = proc_xpd_register_read;
 	xpd->proc_xpd_chipregs->data = xpd;
diff -ur zaptel-1.4.12.1/kernel/xpp/card_pri.c zaptel-1.4.12.1.fixed/kernel/xpp/card_pri.c
--- zaptel-1.4.12.1/kernel/xpp/card_pri.c	2008-08-11 16:00:30.000000000 +0200
+++ zaptel-1.4.12.1.fixed/kernel/xpp/card_pri.c	2012-05-10 10:09:03.502919456 +0200
@@ -412,7 +412,7 @@
 		XPD_ERR(xpd, "Failed to create proc '%s'\n", PROC_PRI_INFO_FNAME);
 		goto err;
 	}
-	priv->pri_info->owner = THIS_MODULE;
+	//priv->pri_info->owner = THIS_MODULE;
 	priv->pri_info->write_proc = proc_pri_info_write;
 	priv->pri_info->read_proc = proc_pri_info_read;
 	priv->pri_info->data = xpd;
diff -ur zaptel-1.4.12.1/kernel/xpp/xbus-core.c zaptel-1.4.12.1.fixed/kernel/xpp/xbus-core.c
--- zaptel-1.4.12.1/kernel/xpp/xbus-core.c	2008-08-11 16:00:30.000000000 +0200
+++ zaptel-1.4.12.1.fixed/kernel/xpp/xbus-core.c	2012-05-10 10:10:02.202449885 +0200
@@ -35,6 +35,7 @@
 #include <linux/workqueue.h>
 #include <linux/device.h>
 #include <linux/delay.h>	/* for msleep() to debug */
+#include <linux/sched.h>
 #include "xpd.h"
 #include "xpp_zap.h"
 #include "xbus-core.h"
@@ -985,7 +986,7 @@
 			XBUS_ERR(xbus, "Failed to create proc file '%s'\n", PROC_XBUS_WAITFOR_XPDS);
 			goto err;
 		}
-		worker->proc_xbus_waitfor_xpds->owner = THIS_MODULE;
+		//worker->proc_xbus_waitfor_xpds->owner = THIS_MODULE;
 	}
 #endif
 	return worker;
@@ -1194,7 +1195,7 @@
 		err = -EIO;
 		goto nobus;
 	}
-	xbus->proc_xbus_summary->owner = THIS_MODULE;
+	//xbus->proc_xbus_summary->owner = THIS_MODULE;
 #ifdef	PROTOCOL_DEBUG
 	xbus->proc_xbus_command = create_proc_entry(PROC_XBUS_COMMAND, 0200, xbus->proc_xbus_dir);
 	if (!xbus->proc_xbus_command) {
@@ -1204,7 +1205,7 @@
 	}
 	xbus->proc_xbus_command->write_proc = proc_xbus_command_write;
 	xbus->proc_xbus_command->data = xbus;
-	xbus->proc_xbus_command->owner = THIS_MODULE;
+	//xbus->proc_xbus_command->owner = THIS_MODULE;
 #endif
 #endif
 #ifdef	XPP_DEBUGFS
@@ -1649,7 +1650,7 @@
 		ret = -EFAULT;
 		goto err;
 	}
-	proc_xbuses->owner = THIS_MODULE;
+	//proc_xbuses->owner = THIS_MODULE;
 #endif
 #ifdef	XPP_DEBUGFS
 	DBG(GENERAL, "Creating debugfs xpp root\n");
diff -ur zaptel-1.4.12.1/kernel/xpp/xbus-sysfs.c zaptel-1.4.12.1.fixed/kernel/xpp/xbus-sysfs.c
--- zaptel-1.4.12.1/kernel/xpp/xbus-sysfs.c	2008-05-13 23:08:09.000000000 +0200
+++ zaptel-1.4.12.1.fixed/kernel/xpp/xbus-sysfs.c	2012-05-10 10:45:45.771343928 +0200
@@ -72,7 +72,7 @@
 /*--------- Sysfs Bus handling ----*/
 static int xpp_bus_match(struct device *dev, struct device_driver *driver)
 {
-	DBG(GENERAL, "dev->bus_id = %s, driver->name = %s\n", dev->bus_id, driver->name);
+	DBG(GENERAL, "dev->bus_id = %s, driver->name = %s\n", dev_name(dev), driver->name);
 	return 1;
 }
 
@@ -119,7 +119,7 @@
 	if(!dev)
 		return -ENODEV;
 	xbus = dev_to_xbus(dev);
-	DBG(GENERAL, "bus_id=%s xbus=%s\n", dev->bus_id, xbus->busname);
+	DBG(GENERAL, "bus_id=%s xbus=%s\n", dev_name(dev), xbus->busname);
 	XBUS_VAR_BLOCK;
 	envp[i] = NULL;
 	return 0;
@@ -140,7 +140,7 @@
 	if(!dev)
 		return -ENODEV;
 	xbus = dev_to_xbus(dev);
-	DBG(GENERAL, "bus_id=%s xbus=%s\n", dev->bus_id, xbus->busname);
+	DBG(GENERAL, "bus_id=%s xbus=%s\n", dev_name(dev), xbus->busname);
 	XBUS_VAR_BLOCK;
 	return 0;
 }
@@ -173,7 +173,7 @@
 };
 
 static struct device xpp_bus = {
-	.bus_id		= "xppbus",
+	.init_name	= "xppbus",
 	.release	= xpp_bus_release
 };
 
@@ -355,9 +355,9 @@
 	XBUS_DBG(GENERAL, xbus, "\n");
 	astribank = &xbus->astribank;
 	BUG_ON(!astribank);
-	if(!astribank->driver_data)
+	if (!dev_get_drvdata(astribank))
 		return;
-	BUG_ON(astribank->driver_data != xbus);
+	BUG_ON(dev_get_drvdata(astribank) != xbus);
 #ifdef	SAMPLE_TICKS
 	device_remove_file(&xbus->astribank, &dev_attr_samples);
 #endif 
@@ -381,8 +381,8 @@
 	device_initialize(astribank);
 	astribank->bus = &xpp_bus_type;
 	astribank->parent = &xpp_bus;
-	snprintf(astribank->bus_id, BUS_ID_SIZE, "xbus-%02d", xbus->num);
-	astribank->driver_data = NULL;	/* override below */
+	dev_set_name(astribank, "xbus-%02d", xbus->num);
+	dev_set_drvdata(astribank, NULL);	/* override below */
 	astribank->release = xpp_dev_release;
 	ret = device_register(astribank);
 	if(ret) {
@@ -421,7 +421,7 @@
 		goto out;
 	}
 #endif 
-	astribank->driver_data = xbus;	/* Everything is good */
+	dev_set_drvdata(astribank, xbus);	/* Everything is good */
 out:
 	return ret;
 }
diff -ur zaptel-1.4.12.1/kernel/xpp/xpp_usb.c zaptel-1.4.12.1.fixed/kernel/xpp/xpp_usb.c
--- zaptel-1.4.12.1/kernel/xpp/xpp_usb.c	2008-05-13 23:08:09.000000000 +0200
+++ zaptel-1.4.12.1.fixed/kernel/xpp/xpp_usb.c	2012-05-10 10:49:26.928258837 +0200
@@ -308,7 +308,7 @@
 		return NULL;
 	}
 	usb_init_urb(&uframe->urb);
-	p = usb_buffer_alloc(xusb->udev, size, gfp_flags, &uframe->urb.transfer_dma);
+	p = usb_alloc_coherent(xusb->udev, size, gfp_flags, &uframe->urb.transfer_dma);
 	if(!p) {
 		if((rate_limit++ % 1003) == 0)
 			XUSB_ERR(xusb, "buffer allocation failed (%d)\n", rate_limit);
@@ -330,7 +330,7 @@
 
 	BUG_ON(xbus->transport.priv != uframe->xusb);
 	//XUSB_INFO(uframe->xusb, "frame_free\n");
-	usb_buffer_free(urb->dev, uframe->transfer_buffer_length,
+	usb_free_coherent(urb->dev, uframe->transfer_buffer_length,
 			urb->transfer_buffer,
 			urb->transfer_dma);
 	memset(uframe, 0, sizeof(*uframe));
@@ -756,7 +756,7 @@
 		retval = -EIO;
 		goto probe_failed;
 	}
-	procsummary->owner = THIS_MODULE;
+	//procsummary->owner = THIS_MODULE;
 #endif
 	bus_count++;
 	xusb->xbus_num = xbus->num;
diff -ur zaptel-1.4.12.1/kernel/xpp/xpp_zap.c zaptel-1.4.12.1.fixed/kernel/xpp/xpp_zap.c
--- zaptel-1.4.12.1/kernel/xpp/xpp_zap.c	2008-08-04 17:52:49.000000000 +0200
+++ zaptel-1.4.12.1.fixed/kernel/xpp/xpp_zap.c	2012-05-10 10:47:50.523791526 +0200
@@ -160,13 +160,13 @@
 		XPD_ERR(xpd, "Failed to create proc file '%s'\n", PROC_XPD_SUMMARY);
 		goto err;
 	}
-	xpd->proc_xpd_summary->owner = THIS_MODULE;
+	//xpd->proc_xpd_summary->owner = THIS_MODULE;
 	xpd->proc_xpd_ztregister = create_proc_entry(PROC_XPD_ZTREGISTER, 0644, xpd->proc_xpd_dir);
 	if (!xpd->proc_xpd_ztregister) {
 		XPD_ERR(xpd, "Failed to create proc file '%s'\n", PROC_XPD_ZTREGISTER);
 		goto err;
 	}
-	xpd->proc_xpd_ztregister->owner = THIS_MODULE;
+	//xpd->proc_xpd_ztregister->owner = THIS_MODULE;
 	xpd->proc_xpd_ztregister->data = xpd;
 	xpd->proc_xpd_ztregister->read_proc = proc_xpd_ztregister_read;
 	xpd->proc_xpd_ztregister->write_proc = proc_xpd_ztregister_write;
@@ -175,7 +175,7 @@
 		XPD_ERR(xpd, "Failed to create proc file '%s'\n", PROC_XPD_BLINK);
 		goto err;
 	}
-	xpd->proc_xpd_blink->owner = THIS_MODULE;
+	//xpd->proc_xpd_blink->owner = THIS_MODULE;
 	xpd->proc_xpd_blink->data = xpd;
 	xpd->proc_xpd_blink->read_proc = proc_xpd_blink_read;
 	xpd->proc_xpd_blink->write_proc = proc_xpd_blink_write;
@@ -728,8 +728,8 @@
 	spin_unlock_irqrestore(&xbus->lock, flags);
 	if(xpd->xops->card_close)
 		xpd->xops->card_close(xpd, pos);
-	XPD_DBG(GENERAL, xpd, "pid=%d: chan=%d (xbus_ref_count=%d)\n",
-		current->pid, pos, atomic_read(&xbus->xbus_ref_count));
+//	XPD_DBG(GENERAL, xpd, "pid=%d: chan=%d (xbus_ref_count=%d)\n",
+//		current->pid, pos, atomic_read(&xbus->xbus_ref_count));
 	if(atomic_dec_and_test(&xbus->xbus_ref_count))
 		xbus_remove(xbus);
 	return 0;
diff -ur zaptel-1.4.12.1/kernel/zaptel-base.c zaptel-1.4.12.1.fixed/kernel/zaptel-base.c
--- zaptel-1.4.12.1/kernel/zaptel-base.c	2012-05-10 10:50:07.606810517 +0200
+++ zaptel-1.4.12.1.fixed/kernel/zaptel-base.c	2012-05-10 10:04:54.064728271 +0200
@@ -58,6 +58,7 @@
 #include <linux/if.h>
 #include <linux/if_ppp.h>
 #endif
+#include <linux/sched.h>
 #include <asm/atomic.h>
 
 #ifndef CONFIG_OLD_HDLC_API
diff -ur zaptel-1.4.12.1/kernel/ztdummy.c zaptel-1.4.12.1.fixed/kernel/ztdummy.c
--- zaptel-1.4.12.1/kernel/ztdummy.c	2012-05-10 10:50:07.613477493 +0200
+++ zaptel-1.4.12.1.fixed/kernel/ztdummy.c	2012-05-10 10:06:19.145325822 +0200
@@ -88,6 +88,7 @@
 #endif
 #include <linux/moduleparam.h>
 #endif
+#include <linux/slab.h>
 #include "ztdummy.h"
 
 
